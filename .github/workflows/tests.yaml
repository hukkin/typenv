name: Tests

on:
  push:
    branches: [ master ]
    tags: [ '[0-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['pypy-3.9', '3.9', '3.10', '3.11', '3.12', '3.13', '3.14-dev']
        os: [ubuntu-latest, macos-latest, windows-latest]
    continue-on-error: ${{ matrix.python-version == '3.14-dev' }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation (deps and package, test and lint deps)
      run: |
        pip install . -r tests/requirements.txt pre-commit
    - name: Linters
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      run: |
        pre-commit run -a
    - name: Test with pytest
      run: |
        pytest --cov --cov-fail-under=100

    - name: Report coverage
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  pypi-publish:
    # Only publish if all other jobs succeed
    needs: [ build ]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install build and publish tools
      run: |
        pip install build twine
    - name: Build and check
      run: |
        rm -rf dist/ && python -m build
        twine check --strict dist/*
    - name: Publish
      run: |
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
